/**
 * Autoreq - Generate a single .js file requiring all files that matches a given file name
 * Copyright Rafael Salguero Iturrios
 */
var fs = require("fs");
var path = require("path");
/**
 * Get all files that have the given file name recursively
 * @folder base folder
 * @fileName the name of the file including extension
 */
function getAllFiles(folder, fileName) {
    var ret = [];
    var topFiles = function (folder) {
        return fs
            .readdirSync(folder)
            .map(function (x) { return path.join(folder, x); })
            .map(function (x) {
            return ({
                path: x,
                isFile: fs.statSync(x).isFile()
            });
        });
    };
    var getFilesRec = function (dir) {
        topFiles(dir).forEach(function (x) {
            if (!x.isFile)
                getFilesRec(x.path);
            else if (path.basename(x.path) == fileName)
                ret.push(x.path);
        });
    };
    getFilesRec(folder);
    return ret;
}
var args = process.argv.slice(2);
if (args.length < 2) {
    //Show console help:
    console.log("Generate a single .js file requiring all files that matches the given file name");
    console.log();
    console.log("Syntax: node autoreq.js fileName basePath output input1 [input2] [input3] ...  ");
    console.log();
    console.log("Arguments:");
    console.log("- fileName : The file name to match including extension");
    console.log("- output   : Path of the resulting generated file");
    console.log("- input[N] : Path of input folders to scan");
    console.log();
    console.log("Example:");
    console.log('node autoreq.js "main.js" "test\\result\\autoreq.js" "."');
}
else {
    var fileName = args[0];
    var output = args[1];
    var inputs = args.slice(2);
    //Get all files that matches the file name
    var files = [];
    inputs.map(function (x) { return getAllFiles(x, fileName); }).forEach(function (x) { return files.push.apply(files, x); });
    var data = "//This file is autogenerated and should not be manually edited\n";
    files.forEach(function (x) { return data += "require('" + x + "');\n"; });
    console.log(data);
    fs.writeFileSync(output, data);
}
